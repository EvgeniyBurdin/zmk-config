/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    macros {
        lang_macro: lang_macro {
            compatible = "zmk,behavior-macro";
            label = "LANG_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(SPACE)) &kp LG(SPACE)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                         &kp ESC               &kp AT_SIGN  &kp MINUS    &kp NON_US_BACKSLASH  &kp EXCLAMATION  &kp BACKSLASH    &kp PERCENT  &kp KP_SLASH  &kp NON_US_HASH   &kp EQUAL             &kp ASTERISK  &kp HASH
&lt 1 RIGHT_PARENTHESIS  &kp LEFT_PARENTHESIS  &kp Q        &kp W        &kp E                 &kp R            &kp T            &kp Y        &kp U         &kp I             &kp O                 &kp P         &kp LBKT          &lt 2 RIGHT_BRACKET
                         &kp BACKSPACE         &kp A        &kp S        &kp D                 &kp F            &kp G            &kp H        &kp J         &kp K             &kp L                 &kp SEMI      &kp SINGLE_QUOTE
                         &kp TAB               &kp Z        &kp X        &kp C                 &kp V            &kp B            &kp N        &kp M         &kp COMMA         &kp DOT               &kp FSLH      &kp GRAVE
                                                            &lang_macro  &kp LCMD              &kp LEFT_SHIFT   &kp ENTER        &kp SPACE    &kp LCTRL     &mt LEFT_ALT ESC  &kp LG(LS(NUMBER_4))
            >;
        };

        nav_layer {
            bindings = <
        &none  &none  &none                   &none                     &none              &lt 3 SPACE    &none     &none          &none         &none      &none  &none
&trans  &none  &none  &kp LA(LC(LEFT_ARROW))  &kp LS(LA(LC(UP_ARROW)))  &kp LA(LC(RIGHT))  &none          &kp HOME  &kp PAGE_DOWN  &kp PG_UP     &kp END    &none  &none  &none
        &none  &none  &none                   &none                     &none              &kp LA(F4)     &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &none  &none
        &none  &none  &none                   &kp LC(LG(LEFT))          &kp LC(LG(RIGHT))  &none          &none     &none          &none         &none      &none  &none
                      &trans                  &trans                    &trans             &trans         &trans    &trans         &trans        &trans
            >;
        };

        num_layer {
            bindings = <
       &trans        &kp CARET        &kp AMPERSAND  &kp PIPE   &kp DOLLAR  &kp TILDE       &lt 3 SPACE  &none   &none   &none   &none  &none
&none  &kp KP_MINUS  &kp KP_SLASH     &kp KP_N7      &kp KP_N8  &kp KP_N9   &kp KP_MINUS    &none        &none   &none   &none   &none  &none  &trans
       &trans        &kp KP_MULTIPLY  &kp KP_N4      &kp KP_N5  &kp KP_N6   &kp KP_PLUS     &none        &none   &none   &none   &none  &none
       &kp KP_EQUAL  &kp KP_N0        &kp KP_N1      &kp KP_N2  &kp KP_N3   &kp KP_DOT      &none        &none   &none   &none   &none  &none
                                      &trans         &trans     &trans      &trans          &trans       &trans  &trans  &trans
            >;
        };

        adjust_layer {
            bindings = <
       &none        &none         &none         &none         &none         &kp T           &kp T         &none         &none         &none         &none         &none
&none  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
